<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.security.demo.mapper.UserMapper">
    <resultMap id="resultUser" type="User">
        <id column="id" property="id"/>
        <result column="create_by" property="create_by"></result>
        <result column="create_time" property="create_time"></result>
        <result column="update_by" property="update_by"></result>
        <result column="update_time" property="update_time"></result>
        <result column="address" property="address"></result>
        <result column="avatar" property="avatar"></result>
        <result column="description" property="description"></result>
        <result column="email" property="email"></result>
        <result column="mobile" property="mobile"></result>
        <result column="nick_name" property="nick_name"></result>
        <result column="password" property="password"></result>
        <result column="sex" property="sex"></result>
        <result column="status" property="status"></result>
        <result column="type" property="type"></result>
        <result column="username" property="username"></result>
        <result column="del_flag" property="del_flag"></result>
        <result column="department_id" property="department_id"></result>
        <result column="street" property="street"></result>
        <result column="pass_strength" property="pass_strength"></result>
        <collection property="role" ofType="Role">
            <id column="t_role_id" property="id"/>
            <result column="t_role_create_by" property="create_by"></result>
            <result column="t_role_create_time" property="create_time"></result>
            <result column="t_role_update_by" property="update_by"></result>
            <result column="t_role_update_time" property="create_time"></result>
            <result column="t_role_name" property="name"></result>
            <result column="t_role_del_flag" property="del_flag"></result>
            <result column="t_role_default_role" property="default_role"></result>
            <result column="t_role_description" property="description"></result>
            <result column="t_role_data_type" property="data_type"></result>
        </collection>
        <collection property="department" ofType="Department">
            <id column="t_department_id" property="id"/>
            <result column="t_department_create_by" property="create_by"></result>
            <result column="t_department_create_time" property="create_time"></result>
            <result column="t_department_del_flag" property="del_flag"></result>
            <result column="t_department_update_by" property="update_by"></result>
            <result column="t_department_update_time" property="update_time"></result>
            <result column="t_department_parent_id" property="parent_id"></result>
            <result column="t_department_sort_order" property="sort_order"></result>
            <result column="t_department_status" property="status"></result>
            <result column="t_department_title" property="title"></result>
            <result column="t_department_is_parent" property="is_parent"></result>
        </collection>
    </resultMap>

    <select id="count" resultType="_int">
        select count(*) from t_user;
    </select>

    <select id="findAll" parameterType="User" resultMap="resultUser">
                select
        t_user.*,
        t_role.id as t_role_id,
        t_role.create_by as t_role_create_by,
        t_role.create_time as t_role_create_time,
        t_role.update_by as t_role_update_by,
        t_role.update_time as t_role_update_time,
        t_role.`name` as t_role_name,
        t_role.del_flag as t_role_del_flag,
        t_role.default_role as t_role_default_role,
        t_role.description as t_role_description,
        t_role.data_type as t_role_data_type,
        t_department.id as t_department_id,
        t_department.create_by as t_department_create_by,
        t_department.create_time as t_department_create_time,
        t_department.del_flag as t_department_del_flag,
        t_department.update_by as t_department_update_by,
        t_department.update_time as t_department_update_time,
        t_department.parent_id as t_department_parent_id,
        t_department.sort_order as t_department_sort_order,
        t_department.`status` as t_department_status,
        t_department.title as t_department_title,
        t_department.is_parent as t_department_is_parent
        from
        t_user,t_user_role,t_role,t_department
        where
        t_user.id=t_user_role.user_id
        and t_role.id=t_user_role.role_id
        and t_department.id=t_user.department_id
        limit #{pageNum},#{pageSize} ;
    </select>

    <select id="totalOffindAll"  resultType="_int">
        select
        count(*)
        from
        t_user,t_user_role,t_role,t_department
        where
        t_user.id=t_user_role.user_id
        and t_role.id=t_user_role.role_id
        and t_department.id=t_user.department_id;
    </select>

    <select id="findUser" parameterType="User" resultMap="resultUser">
        select
        t_user.*,
        t_role.id as t_role_id,
        t_role.create_by as t_role_create_by,
        t_role.create_time as t_role_create_time,
        t_role.update_by as t_role_update_by,
        t_role.update_time as t_role_update_time,
        t_role.`name` as t_role_name,
        t_role.del_flag as t_role_del_flag,
        t_role.default_role as t_role_default_role,
        t_role.description as t_role_description,
        t_role.data_type as t_role_data_type,
        t_department.id as t_department_id,
        t_department.create_by as t_department_create_by,
        t_department.create_time as t_department_create_time,
        t_department.del_flag as t_department_del_flag,
        t_department.update_by as t_department_update_by,
        t_department.update_time as t_department_update_time,
        t_department.parent_id as t_department_parent_id,
        t_department.sort_order as t_department_sort_order,
        t_department.`status` as t_department_status,
        t_department.title as t_department_title,
        t_department.is_parent as t_department_is_parent
        from
        t_user,t_user_role,t_role,t_department
        where
        t_user.id=t_user_role.user_id
        and t_role.id=t_user_role.role_id
        and t_department.id=t_user.department_id
            <if test="id!=null">
                and t_user.id=#{id}
            </if>
            <if test="username!=null">
                and t_user.username like concat('%',#{username},'%')
            </if>
        limit #{pageNum},#{pageSize};
    </select>

    <select id="totalOffindUser" parameterType="User" resultType="_int">
        select
        count(*)
        from
        t_user,t_user_role,t_role,t_department
        where
        t_user.id=t_user_role.user_id
        and t_role.id=t_user_role.role_id
        and t_department.id=t_user.department_id
        <if test="id!=null">
            and t_user.id=#{id}
        </if>
        <if test="username!=null">
            and t_user.username like concat('%',#{username},'%')
        </if>
        limit #{pageNum},#{pageSize};
    </select>

    <insert id="addUser" parameterType="User">
        insert into t_user value(
        null,#{create_by},#{create_time},
        #{update_by},#{update_time},#{address},
        #{avatar},#{description},#{email},#{mobile},
        #{nick_name},#{password},#{sex},#{status},
        #{type},#{username},#{del_flag},#{department_id},
        #{street},#{pass_strength})
    </insert>

    <update id="updateRole" parameterType="User">
        update t_user_role set role_id=#{role.id} where user_id=#{id};
    </update>

    <update id="updateUser" parameterType="User">
        update t_user
        <set>
            <if test="create_by!=null">
                t_user.create_by=#{create_by},
            </if>
            <if test="create_time!=null">
                t_user.create_time=#{create_time},
            </if>
            <if test="update_by!=null">
                t_user.update_by=#{update_by},
            </if>
            <if test="update_time!=null">
                t_user.update_time=#{update_time},
            </if>
            <if test="address!=null">
                t_user.address=#{address},
            </if>
            <if test="avatar!=null">
                t_user.avatar=#{avatar},
            </if>
            <if test="description!=null">
                t_user.description=#{description},
            </if>
            <if test="email!=null">
                t_user.email=#{email},
            </if>
            <if test="mobile!=null">
                t_user.mobile=#{mobile},
            </if>
            <if test="nick_name!=null">
                t_user.nick_name=#{nick_name},
            </if>
            <if test="password!=null">
                t_user.password=#{password},
            </if>
            <if test="sex!=null">
                t_user.sex=#{sex},
            </if>
            <if test="status!=null">
                status=#{status},
            </if>
            <if test="type!=null">
                t_user.type=#{type},
            </if>
            <if test="username!=null">
                username=#{username},
            </if>
            <if test="del_flag!=null">
                t_user.del_flag=#{del_flag},
            </if>
            <if test="department_id!=null">
                t_user.department_id=#{department_id},
            </if>
            <if test="street!=null">
                t_user.street=#{street},
            </if>
            <if test="pass_strength!=null">
                t_user.pass_strength=#{pass_strength},
            </if>
        </set>
        where id=#{id};
    </update>

    <delete id="deleteUser" parameterType="User">
        delete from t_user where id=#{id};
    </delete>
</mapper>